{
	"info": {
		"_postman_id": "dab2325b-32f2-43e2-8c99-c7fcff088fe0",
		"name": "Node Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34643024"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "List Invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status test 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test('Invalid token', function() {\r",
									"    pm.expect(response.error).to.eql('Invalid token');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/users/list",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status test 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response data test', function() {\r",
									"    pm.expect(response.data.id).to.be.a('number');\r",
									"    pm.expect(response.data.email).to.be.a('string');\r",
									"    pm.expect(response.data.email).to.eql('test@gmail.com');\r",
									"    pm.expect(response.data.password).to.be.a('string').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@gmail.com\",\r\n    \"password\": \"test1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/users/register",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"pm.environment.set('token', response.data.token);\r",
									"\r",
									"pm.test(\"Status test 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response data test', function() {\r",
									"    pm.expect(response.data.email).to.be.a('string');\r",
									"    pm.expect(response.data.email).to.eql('dipper@gmail.com');\r",
									"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"dipper@gmail.com\",\r\n    \"password\": \"dipper1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/users/login",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status test 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response data test', function() {\r",
									"    pm.expect(response.data.email).to.be.a('string');\r",
									"    pm.expect(response.data.email).to.eql('dipper@gmail.com');\r",
									"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/users/list",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status test 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response data test', function() {\r",
									"    pm.expect(response.data.email).to.be.a('string');\r",
									"    pm.expect(response.data.email).to.eql('dipper@gmail.com');\r",
									"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        {{newUser}}\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/users/delete",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}