{
	"info": {
		"_postman_id": "dab2325b-32f2-43e2-8c99-c7fcff088fe0",
		"name": "Node Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34643024"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "List Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test('Invalid token', function() {\r",
											"    pm.expect(response.error).to.eql('Invalid token');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [1, 2, 3]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/list",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"pm.environment.set('token', response.data.token);\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data.email).to.be.a('string');\r",
											"    pm.expect(response.data.email).to.eql('user@gmail.com');\r",
											"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"user@gmail.com\",\r\n    \"password\": \"L1bnuCPc\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/login",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Authorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data).to.be.an('array').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [1, 2, 3]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/list",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"list"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Register",
					"item": [
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"pm.environment.set('newUser', response.data.id);\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data.id).to.be.a('number');\r",
											"    pm.expect(response.data.email).to.be.a('string');\r",
											"    pm.expect(response.data.email).to.eql('newUser@gmail.com');\r",
											"    pm.expect(response.data.authority).to.be.a('string').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"newUser@gmail.com\",\r\n    \"password\": \"eehkmx1j\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/register",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"pm.environment.set('token', response.data.token);\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data.email).to.be.a('string');\r",
											"    pm.expect(response.data.email).to.eql('newUser@gmail.com');\r",
											"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"newUser@gmail.com\",\r\n    \"password\": \"eehkmx1j\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/login",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Operator Actions",
					"item": [
						{
							"name": "Login Operator",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"pm.environment.set('token', response.data.token);\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data.email).to.be.a('string');\r",
											"    pm.expect(response.data.email).to.eql('operator@gmail.com');\r",
											"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"operator@gmail.com\",\r\n    \"password\": \"rOmYDeKc\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/login",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}},\r\n    \"email\": \"newEmail@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/update",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n        {{newUser}}\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/delete",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}},\r\n    \"restore\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/update",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demote No Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.error).to.be.a('string');\r",
											"    pm.expect(response.error).to.eql('User has no permissions for this action');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/demote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"demote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote No Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.error).to.be.a('string');\r",
											"    pm.expect(response.error).to.eql('User has no permissions for this action');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/promote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"promote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Hard No Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.error).to.be.a('string');\r",
											"    pm.expect(response.error).to.eql('User has no permissions for this action');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n        {{newUser}}\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/delete/hard",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"delete",
										"hard"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Administrator Actions",
					"item": [
						{
							"name": "Login Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"pm.environment.set('token', response.data.token);\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data.email).to.be.a('string');\r",
											"    pm.expect(response.data.email).to.eql('admin@gmail.com');\r",
											"    pm.expect(response.data.token).to.be.a('string').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@gmail.com\",\r\n    \"password\": \"KEOgl1Eu\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/login",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/promote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"promote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Promoted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data[0].authority).to.be.a('string');\r",
											"    pm.expect(response.data[0].authority).to.eql('Moderator');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [{{newUser}}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/list",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot Promote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.error).to.be.a('string');\r",
											"    pm.expect(response.error).to.eql('Cannot promote this account');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/promote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"promote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Demote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{newUser}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/demote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"demote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Demoted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.data[0].authority).to.be.a('string');\r",
											"    pm.expect(response.data[0].authority).to.eql('User');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [{{newUser}}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/list",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot Demote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.error).to.be.a('string');\r",
											"    pm.expect(response.error).to.eql('Cannot demote this account');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/demote",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"demote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Hard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"pm.test(\"Status test 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test('Response data test', function() {\r",
											"    pm.expect(response.status).to.be.a('string');\r",
											"    pm.expect(response.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n        {{newUser}}\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}:{{port}}/users/delete/hard",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users",
										"delete",
										"hard"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}